syntax = "proto3";
package leanhelix;
option go_package = "github.com/orbs-network/lean-helix-go/leanhelix";

import "../primitives/lean_helix_primitives.proto";

enum MessageType {
    LEAN_HELIX_RESERVED = 0;
    LEAN_HELIX_PREPREPARE = 1;
    LEAN_HELIX_PREPARE = 2;
    LEAN_HELIX_COMMIT = 3;
    LEAN_HELIX_NEW_VIEW = 4;
    LEAN_HELIX_VIEW_CHANGE = 5;
}

message LeanhelixMessage {
    oneof message {
        PreprepareMessage preprepare_message = 1;
        PrepareMessage prepare_message = 2;
        CommitMessage commit_message = 3;
        ViewChangeMessage view_change_message = 4;
        NewViewMessage new_view_message = 5;
    }
}

message PreprepareMessage {
    BlockRef signed_header = 1;
    MemberSignature sender = 2; // signs on signed_header
}

message PrepareMessage {
    BlockRef signed_header = 1;
    MemberSignature sender = 2; // signs on signed_header
}

message CommitMessage {
    BlockRef signed_header = 1;
    MemberSignature sender = 2; // signs on signed_header
    primitives.random_seed_signature share = 3;  // signs on random_seed
}

message ViewChangeMessage {
    ViewChangeHeader signed_header = 1;
    MemberSignature sender = 2; // signs on signed_header
}

message NewViewMessage {
    NewViewHeader signed_header = 1;
    MemberSignature sender = 2; // signs on signed_header
    PreprepareMessage message = 3;
}

message MemberSignature {
    primitives.member_id member = 1;
    primitives.signature signature = 2;
}

message BlockRef {
    MessageType message_type = 1;
    primitives.block_height block_height = 2;
    primitives.view view = 3;
    primitives.block_hash block_hash = 4;
}

message ViewChangeHeader {
    MessageType message_type = 1;
    primitives.block_height block_height = 2;
    primitives.view view = 3;
    PreparedProof prepared_proof = 4;
}

message PreparedProof {
    BlockRef preprepare_block_ref = 1;
    MemberSignature preprepare_sender = 2;
    BlockRef prepare_block_ref = 3;
    repeated MemberSignature prepare_senders = 4;
}

message NewViewHeader {
    MessageType message_type = 1;
    primitives.block_height block_height = 2;
    primitives.view view = 3;
    repeated ViewChangeMessage view_change_confirmations = 4;
}

message BlockProof {
    BlockRef block_ref = 1;
    repeated MemberSignature nodes = 2;
    primitives.random_seed_signature random_seed_signature = 3;
}
