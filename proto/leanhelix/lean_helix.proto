syntax = "proto3";
package leanhelix;
option go_package = "github.com/orbs-network/lean-helix-go/leanhelix";

import "../primitives/lean_helix_primitives.proto";

enum MessageType {
    LEAN_HELIX_RESERVED = 0;
    LEAN_HELIX_PREPREPARE = 1;
    LEAN_HELIX_PREPARE = 2;
    LEAN_HELIX_COMMIT = 3;
    LEAN_HELIX_NEW_VIEW = 4;
    LEAN_HELIX_VIEW_CHANGE = 5;
}

message PreprepareContent {
    BlockRef signed_header = 1;
    SenderSignature sender = 2; // signs on signed_header
}

message PrepareContent {
    BlockRef signed_header = 1;
    SenderSignature sender = 2; // signs on signed_header
}

message CommitContent {
    BlockRef signed_header = 1;
    SenderSignature sender = 2; // signs on signed_header
}

message ViewChangeMessageContent {
    ViewChangeHeader signed_header = 1;
    SenderSignature sender = 2; // signs on signed_header
}

message NewViewMessageContent {
    NewViewHeader signed_header = 1;
    SenderSignature sender = 2; // signs on signed_header
    PreprepareContent preprepare_message_content = 3;
}

message BlockProof {
    BlockRef block_ref = 1;
    repeated SenderSignature nodes = 2;
    primitives.Bls1_sig random_seed_signature = 3;
}

message SenderSignature {
    primitives.Ed25519_public_key sender_public_key = 1;
    primitives.Ed25519_sig signature = 2;
}

message BlockRef {
    MessageType message_type = 1;
    primitives.BlockHeight block_height = 2;
    primitives.View view = 3;
    primitives.Uint256 block_hash = 4;
}

message ViewChangeHeader {
    MessageType message_type = 1;
    primitives.BlockHeight block_height = 2;
    primitives.View view = 3;
    PreparedProof prepared_proof = 4;
}

message PreparedProof {
    BlockRef preprepare_block_ref = 1;
    SenderSignature preprepare_sender = 2;
    BlockRef prepare_block_ref = 3;
    repeated SenderSignature prepare_senders = 4;
}

message NewViewHeader {
    MessageType message_type = 1;
    primitives.BlockHeight block_height = 2;
    primitives.View view = 3;
    repeated ViewChangeMessageContent view_change_confirmations = 4;
}

